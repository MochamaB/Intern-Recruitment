@model Workflows.ViewModels.RequisitionIndexViewModel

@{
    ViewData["Title"] = "Index";
    // Roles allowed to view admin functions. Add roles below to the roles Array//
    // Roles available are "Admin","HR", "Hod", "supervisor","user","2_step_mgrs","2_step_secs","FieldUser","FieldSupervisor"
    var rolesArray = new[] { "Admin", "HR" };
    var roles = string.Join(",", rolesArray);
}


<a asp-controller="RequisitionWizard" asp-action="checkDepartment" class="btn btn-primary text-white mb-0 me-0  float-end">
    <div style="display: flex; align-items: center;">
        <i class="mdi mdi-plus-circle-outline" style="margin-right: 5px;"></i>
        <span>  Add Requisition</span>
    </div>
</a>
<div style="clear: both;"></div>



<div class=" table-responsive" id="dataTable">
    <partial name="_FilterRequisition" model="Model.Filter" />
    <table id="table"
           data-toggle="table"
           data-icon-size="sm"
           data-buttons-class="primary"
           data-toolbar-align="right"
           data-buttons-align="left"
           data-search-align="left"
           data-sort-order="asc"
           data-search="true"
           data-mobile-responsive="true"
           data-sticky-header="true"
           data-pagination="true"
           data-page-list="[100, 200, 250, 500, ALL]"
           data-page-size="100"
           data-show-footer="false"
           data-side-pagination="client"
           data-show-export="true"
           class="table">

        <thead>
            <tr>
                <th data-sortable="true">
                    ID
                </th>
                <th data-sortable="true">
                    Department
                </th>
                <th>
                   Intern
                </th>
                <th>
                    Start - End Date
                </th>

                <th data-sortable="true">
                    Status
                </th>
                <th data-sortable="true">Approvals</th>
               
                <th>
                    Station
                </th>
                <th>
                    Added By
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Requisitions)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        <!-- GET THE DEPARTMENT FOR EACH REQUISITION-->
                        @foreach (var department in ViewBag.Departments)
                        {
                            if (department.DepartmentCode == item.DepartmentCode)
                            {
                                @department.DepartmentName
                            }
                        }
                    </td>
                    <td>
                        @(ViewBag.InternNames.ContainsKey(item.Intern_id) ? ViewBag.InternNames[item.Intern_id] : "InternUser")
                    </td>
                    <td>
                        @if (item.Status == "Active")
                        {
                            var daysLeft = (int)@ViewBag.DaysLeftDictionary[item.Id];
                            var badgeClass = daysLeft == 0 ? "badge-danger" : "badge-information";
                            <span class="badge @badgeClass mb-2">@daysLeft Days left</span>
                            <br />
                        }
                        @Html.DisplayFor(modelItem => item.Start_Date) -   @Html.DisplayFor(modelItem => item.End_Date)

                    </td>
                   

                    <td>
                        <span class="badge @(item.Status == "Active" ? "badge-active" : "badge-danger")">
                            @Html.DisplayFor(modelItem => item.Status)
                        </span>
                    </td>
                    <td>
                        <!-- SET THE BADGE CLASS FOR THE APPROVAL STATUSES-->
                        <span class=" badge @(ViewBag.ApprovalStatuses.ContainsKey(item.Id) ?
                            (ViewBag.ApprovalStatuses[item.Id] == "Pending Approval" ? "badge-warning" :
                            ViewBag.ApprovalStatuses[item.Id] == "Approval Rejected" ? "badge-danger" :
                            ViewBag.ApprovalStatuses[item.Id] == "Fully Approved" ? "badge-active" :
                            "N/A") : "N/A")">
                            <!-- ADD STEP NUMBER OF APPROVALS-->
                            @(ViewBag.StepNumber.ContainsKey(item.Id) ? ViewBag.StepNumber[item.Id] : "3").
                            <!-- ADD THE STATUS-->
                            @(ViewBag.ApprovalStatuses.ContainsKey(item.Id) ? ViewBag.ApprovalStatuses[item.Id] : "N/A")
                        </span>
                        <!-- ADD THE APPROVAL STEP NAME-->
                        <br><br /><b> @(ViewBag.ApprovalStep.ContainsKey(item.Id) ? ViewBag.ApprovalStep[item.Id] : "HOH Approval"): </b>
                        <!-- ADD THE APPROVAL APPROVER NAME-->
                        @(ViewBag.ApprovalEmployeeNames.ContainsKey(item.Id) ? ViewBag.ApprovalEmployeeNames[item.Id] : "HR Operations")

                        <!-- ADD THE COMMENT IF STATUS IS REJECTED -->
                        @if (ViewBag.ApprovalStatuses.ContainsKey(item.Id))
                        {
                            var approvalStatus = ViewBag.ApprovalStatuses[item.Id] as string;
                            if (approvalStatus == "Approval Rejected")
                            {
                                <br>
                                <p class="text-wrap pt-1"
                                   style="width:250px;">
                                    <b>Comment:</b>
                                    @(ViewBag.ApprovalComment.ContainsKey(item.Id) ? ViewBag.ApprovalComment[item.Id] : "")
                                </p>
                            }
                        }

                    </td>

                   
                    <td>
                        @Html.DisplayFor(modelItem => item.Station)
                    </td>
                    <td>
                        @(ViewBag.EmployeeNames.ContainsKey(item.PayrollNo) ? ViewBag.EmployeeNames[item.PayrollNo] : "DeptUser")

                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id"><i class="mdi mdi-eye mdi-24px text-warning"></i></a>
                        <a asp-authorize-role="@roles" asp-action="Edit" asp-route-id="@item.Id"><i class="mdi mdi-lead-pencil mdi-24px text-primary"></i></a>
                        <a asp-authorize-role="Admin" asp-action="Delete" asp-route-id="@item.Id"> <i class="mdi mdi-delete mdi-24px text-danger"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
